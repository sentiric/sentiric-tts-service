networks:
  sentiric-net:
    # Ana altyapı tarafından oluşturulan ağı kullanacağımızı belirtiyoruz
    # external: true
    name: ${NETWORK_NAME:-sentiric-net}

services:
  tts-service:
    # YENİ: İmaj ismini standartlaştırıyoruz
    image: ghcr.io/sentiric/sentiric-tts-service:latest
    build:
      context: .
      dockerfile: Dockerfile


    env_file:
      - ./.env.docker

    # volumes:
    #   - ../sentiric-infrastructure/tls/certs:/etc/sentiric/tls:ro
    # NOT: stt-service'te yaptığımız gibi kalıcı model cache'i burada da
    # kullanabiliriz, ancak model build sırasında indirildiği için
    # şu an için zorunlu değil.

    networks:
      - sentiric-net

    ports:
      - "${TTS_SERVICE_PORT}:${TTS_SERVICE_PORT}"

    profiles:
      - default
      - ai
    
    # YENİ: Healthcheck ekliyoruz
    healthcheck:
      # Container içindeki curl ile test ediyoruz
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      # Modelin yüklenmesi için başlangıçta daha uzun bir süre tanıyoruz
      start_period: 5m 

    # Kaynak limitleri, özellikle XTTS modeli için önemlidir.
    # Bu değerleri makinenizin kapasitesine göre ayarlayabilirsiniz.
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 6G
        reservations:
          memory: 2G

    restart: unless-stopped

